* git 기본 용어
    1) 작업공간 (working directory / working tree)
        작업을 하는 공간
        로컬 저장소에 접근하여 파일을 생성, 수정 그리고 저장하는 공간

    2) 임시 작업공간(stage area)
        = working tree -> stage 로 옮기다고 함.

    3) repository 실질적으로 저장되고 기록되는 공간
        저장소
        히스토리, 태그, 소스의 가지치기 혹은 branch 에 따라 버전을 저장
        작업자가 변경한 모든 히스토리를 확인 가능

                     git(local)                                     |        git hub
        -----------------------------------------------------------------------------
        git -> 폴더(working tree) --(upload)--> stage area --(확인 commit)--> repository

* git
    인터넷 없이도 작업가능함

* Commit
    현재 변경된 작업 상태를 점검을 마치고 확정하고 저장소에 저장하는 작업

* branch
    가지 또는 분기점
    작업을 할때에 현재 상태를 복사하여 Branch 에서 작업을 한 후에 완전하다 싶을때 merge 를 하여 작업한다
    새로 만든 브랜치는 지금 작업하고 있는 마지막 commit 을가르킨다

* Merge
    다른 Branch 의 내용을 현재 Branch 로 가져와 합치는 작업을 의미한다


===================================================================
* git init
    git 저장소를 초기화 ( not reset, 초기값 지정)
    저장소나 디텍토리 안에서 이 명령어를 실행하기 전까지는 그냥 일반 폴더이다.
    이 명령어을 입력한 후에야 추가적인 git 명령어 입력 가능.
        1) 아무 폴더나 만들고 폴더 내부를 오른쪽 클릭하여 git bash 실행.
        2) git init 입력하면 .git 이라는 폴더 생성되며 git 이 폴더 관리.

* git status
    저장소 상태 체크
    어떤 파일이 저장소 안에 있는지 커밋이 필요한 변경사항이 있는지
    현재 저장소의 어떤 Branch 에서 작업하고 있는지 등의 상태 정보 출력

*git config --global user.name
*git config --global user.email

*git add .(. or -A)

*git commit -m "커밋데이터"

* git branch 새로운브랜치

* git checkout 옮길브랜치

* git remote origin "깃주소"

* git push -u origin master

* 다운로드 : 파일만 받아짐 수정을하면 다시 연결을 하고 올려야함

 * 클론 : 연결된 채로 받아짐 수정하면 다시 올리기만 하면 됨.
========================================================
왜 에러가 발생했는가 -> 오타
에러문구 검색했더니 ~~~에러더라 -> 오타를 수정하여 해결했다

에러를 기록하는 습관.
에러문구 정리 해놓으면 코드 실력이 좋아질것이다.

추상적인것 -> 구체적인것으로 찾아가는 과정이 중요
    스스로 공부하는 것이 중요하다.

============================================================
MarkUp 문법

# 대제목
## 제목
###
####
#####

-
-
-

1)
2)
3)
===================
<과제>
git hub desk top 을 사용하여.

second repository 만들어서 readme.md 만들고
클론해 보기.
